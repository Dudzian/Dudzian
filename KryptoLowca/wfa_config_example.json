{
  // ===== podstawy =====
  "symbols": ["ETH/USDT", "BNB/USDT"],
  "timeframe": "15m",

  // maksymalny horyzont danych, z którego budujemy okna WF
  "max_bars": 12000,

  // rozmiary okien walk-forward
  "wf_train_bars": 6000,
  "wf_test_bars": 1500,
  // "wf_step_bars": 1500, // domyślnie = wf_test_bars

  // warunki filtrowania/parametry optymalizacji
  "min_trades": 10,
  "ema_slow": 150,

  // risk model dla testu
  "capital": 10000.0,
  "risk_pct": 0.5,

  // siatki dla optymalizacji (idą wprost do optimize_programmatic jako "grid")
  "grids": {
    "grid_min_atr_pct": "0.10,0.12,0.15",
    "grid_k_sl": "1.0,1.2,1.5",
    "grid_k_tp": "1.0,1.3,1.6"
  },

  // katalog roboczy
  "workdir": "walkforwards",

  // reguły reoptymalizacji
  "rules": {
    "reopt_pf_below": 1.3,
    "reopt_pf_drop_pct": 35.0,
    "reopt_exp_below": 0.0,
    "reopt_exp_drop_pct": 40.0,
    "atr_lookback": 14,
    "atr_rise_pct": 25.0
  },

  // integracja subprocess (jeśli nie masz API programatycznego)
  // Użyj {placeholders} zgodnie z opisem w SubprocessCmds.
  // Komendy powinny zwracać JSON na stdout (albo ścieżkę do pliku JSON).
  "subprocess_cmds": {
    "optimize_cmd": "python -m backtest.optimize --symbols {symbols} --timeframe {timeframe} --from \"{from_dt}\" --to \"{to_dt}\" --max-bars {max_bars} --min-trades {min_trades} --ema-slow {ema_slow} --workdir \"{workdir}\" --output json",
    "run_cmd": "python -m backtest.runner --symbols {symbols} --timeframe {timeframe} --from \"{from_dt}\" --to \"{to_dt}\" --max-bars {max_bars} --capital {capital} --risk-pct {risk_pct} --preset \"{preset_json}\" --workdir \"{workdir}\" --output json"
  },

  // pętla live (ciągłe działanie w tle)
  "loop_forever": false,
  "loop_sleep_sec": 30.0,

  // responsywność GUI
  "poll_interval_sec": 0.5
}
