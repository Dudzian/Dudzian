name: CI

on:
  push:
    branches: ["main", "master", "develop"]
  pull_request:

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Lint repository paths
        run: python scripts/lint_paths.py

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r KryptoLowca/requirements.txt
          pip install pytest pytest-cov ruff mypy

      - name: Ruff lint
        run: >-
          ruff check
          KryptoLowca/core/services
          KryptoLowca/strategies/base
          KryptoLowca/config_manager.py
          KryptoLowca/strategies/marketplace.py

      - name: Mypy type check
        run: mypy

      - name: Pytest with coverage
        run: >-
          pytest
          --cov=bot_core.strategies
          --cov=bot_core.runtime.multi_strategy_scheduler
          --cov=bot_core.runtime.journal
          --cov-config=.coveragerc
          --cov-report=xml
          --cov-report=term
          --cov-fail-under=75
          tests/test_pipeline_paper.py
          tests/test_risk_profiles.py
          tests/test_mean_reversion_strategy.py
          tests/test_volatility_target_strategy.py
          tests/test_cross_exchange_arbitrage_strategy.py
          tests/test_multi_strategy_scheduler.py
          tests/test_backtest_dataset_library.py
          tests/test_telemetry_risk_profiles.py
          tests/test_trading_decision_journal.py
          tests/test_smoke_demo_strategies_cli.py
          KryptoLowca/tests/strategies/test_registry.py

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  bot-core-fast-tests:
    name: Bot Core Fast Tests
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Run fast pytest suite
        env:
          PYTEST_FAST: "1"
        run: |
          mkdir -p test-results
          pytest --fast --maxfail=1 --durations=10 --junitxml=test-results/pytest.xml

      - name: Upload pytest results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bot-core-pytest-results
          path: test-results/pytest.xml

  coverage-monitoring:
    name: Coverage Monitoring Smoke
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r KryptoLowca/requirements.txt
          pip install .

      - name: Generate coverage sample manifest
        run: python scripts/build_sample_manifest.py --output-dir tests/assets/coverage_sample

      - name: Coverage alert runner (nominal)
        run: >-
          python -m scripts.coverage_alert_runner
          --config tests/assets/coverage_sample/core.yaml
          --all-configured
          --as-of 2024-01-22T00:00:00+00:00
          --json

      - name: Coverage alert runner (threshold violation smoke)
        run: |
          set +e
          python -m scripts.coverage_alert_runner \
            --config tests/assets/coverage_sample/core.yaml \
            --all-configured \
            --as-of 2024-02-05T00:00:00+00:00 \
            --json > violation.json
          exit_code=$?
          set -e
          cat violation.json
          if [ "$exit_code" -eq 1 ]; then
            echo "Threshold violation triggered as expected"
          else
            echo "Expected exit code 1 but got $exit_code"
            exit 1
          fi

      - name: Upload coverage runner outputs
        uses: actions/upload-artifact@v4
        with:
          name: coverage-runner-smoke
          path: violation.json
